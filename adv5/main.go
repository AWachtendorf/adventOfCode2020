package adv5

import (
	"fmt"
	"sort"
	"strings"
)

const test = "FBFBBFFRLR"

type boardingPasses struct {
	passes []string
}

var allSeatIDs []int

const puzzleInput = "BFBFFFFLLL\nBBFBBFBRLL\nBFBBFFFRRR\nFBFFBBBLLL\nFFBBFBBRLL\nBBBFFFFLRL\nBFBBBFBRRR\nFBBFFFBLRL\nFFBFBBFLLR\nFBFFFFBLRL\nBBFFBBFRLL\nBBFBBBBLLR\nFFBBBBFRLR\nBBFFBFFRLR\nBFFBBFFRRL\nBBFBBBFLLR\nFBFBBBBRRL\nBFFFBFFLRL\nFBFFFBFRLL\nFBBBFFBLRR\nFFFBFBBRLR\nFBBFBBFLLR\nFBFBFFFLRL\nBFFBFBFLLR\nBBFBFBBRRL\nBFFBBFBRLR\nFBFBFFFRRL\nBFBFFBBRRL\nFBFBFBFLLL\nBFFBFFBRRL\nFFBBBBBRRL\nFFFBFBFRLR\nBBFFFBBLRL\nBFBFBFFRLL\nBFBFFFBRLR\nFBBBFFFRRR\nBBFFFBFRLL\nFBBBFBFRLL\nFFBBBFFLRR\nFBFBBFBLRL\nFBBBBBFLLR\nFBFFBBBLRL\nFFFBBFFRRL\nFBBBFFFRLR\nBBFBFFFRLR\nBBFBBFBLLL\nFBFFBBBRRL\nBFFFFBFRRR\nFBBFFBFLRR\nFBFBBBFLRL\nBFBBBBBRRL\nBBFFFFBLRL\nFBFFFBFLLL\nFFFBBFFLLR\nFBBBFBFLRR\nBBBFFBFRRL\nBFBFFFFRLR\nFFBFFFBRLR\nFBFFBFBRLL\nFBBFFFFRLL\nFFFBBFBRRR\nFBBBBFFLRR\nBFBBBFBRLR\nBFFFFFFRRR\nFFBBBBFRRR\nBFFBFBFRRL\nBFFBFFFRLR\nBBFFBFBLRR\nFBFFFBBLLL\nFBFFFFFRLR\nBFBBFBFLRR\nFBBBBBBLRL\nBFFFFBBLRR\nBFFBFFFRRR\nFBFFFBFLRL\nBFBBFFBLRR\nBBFBBBBLLL\nBBFBBBFRRL\nFBBBBBBRLR\nBFFBFBFLRR\nBFFBFFFLLR\nFBBBBBFLRL\nFBFFFBFRRL\nFFBBBBFRRL\nBFBBBBBRLR\nFBBBBBFRRL\nFFBFBFFLLL\nBBBFFFFRRL\nBBFBBFBRRR\nBFBFFFFRLL\nFBFFFFFLLR\nFFFBBFFLRL\nFBFFBFFLRR\nFBFFBBFRLR\nFFBBBFBLLR\nBFFFFBFLRR\nBBFBFBFRRR\nFBBFBBBLLL\nFBBFBFBLLL\nFBBBFFBLRL\nBBBFFBFRRR\nFBBBFBFLRL\nFBFFFBFRRR\nFBFFBFBRRR\nFFBBFFBRLL\nBFBFBFBLLR\nBBFFFFBRRR\nFBBBBBBLLR\nFBBBBFFRLR\nBBFBBFFLRL\nBFBBFBFLLR\nFBFFFFFRLL\nFFBBFFFLLR\nBBFFFBFRRR\nBFBBBFFLLR\nBBFFFFBRLR\nFFBFBBFRLR\nBFBFFFBLLL\nFBFFBFFLLL\nFBBBFBBRLR\nBBFBFFFLLR\nFBFFFBBRLR\nBFFBFBBLLL\nBFFBBFFLLR\nFBBFFBBRLR\nBBFBFFBRLL\nFBFBBBFRRL\nBFBBBFBLLR\nBBFFBBBRLL\nBBBFFFBLRL\nBBFBFFBRLR\nBFFBBBFRRR\nFFFBFBBRLL\nFBFBFBBRLL\nBFFFFFBRLR\nFBFFBBBRRR\nFBFFBBFLRL\nBFFFBBBRLL\nFBBBBFFLLL\nBBFBFFFRRR\nBFBFBBFLLL\nFFBBFBFRRL\nFFFBBBBRLR\nBFFBBBBRLL\nFFBFBBFRRL\nFBFBFBFRLL\nBBBFFFBRRL\nBBBFFBFRLR\nFBFBFBFLLR\nBBFBBFFRLL\nFBFBFFFLLR\nBBFBFBFRRL\nBFFBBFBRRL\nFFBFFBFRLR\nBFFBBFBRRR\nFFBBFFBRRL\nBFFFFBBRRL\nFBBBBFFRLL\nFBBBFFBRRR\nFBBFFBFLLL\nBBBFFBFRLL\nFFFBBFBLLR\nBFFBBFFLRR\nBFBFBFFLLL\nBFBFFBBLRL\nFFFBBFBLRR\nBBFFBFBLLL\nFBBBFBFRRL\nBFBBBBBLLR\nBBFBFBBLLL\nFFBFBFFLRR\nBFFFFFFLLR\nBFBFBFFRRL\nBFBFBBFLLR\nFBBBBFFLLR\nFFBBFFBLLL\nBBFFBFBRRR\nFFFBBFBLRL\nFBFBFFBLRL\nBFBBBBBLLL\nBFFFFBFRRL\nFBFFFFFLRL\nBFFFBFBLRL\nBFFBFBFLLL\nBBFBBBFRRR\nFBFBFFBLRR\nFBFBBBBRLL\nBBFFFFFLRL\nFBBFFFBRRR\nFBFFFBBRLL\nBFFFBFFLLL\nBFFBBFFLRL\nFFBFFFBLLL\nBFBFBBBLLL\nFBBFBFBLRR\nFBFFBFFLLR\nFBFFBBFRRR\nBBFFFBFLLR\nBBFBBFBLRL\nFBFBBBFRRR\nBBFFFFBLLR\nFFBFBFBLRL\nFFBBBBBLLR\nFBFBFBBLRR\nFFBBBFFRLL\nFBBFBFBRLL\nBBFBFFBRRL\nBFBFFBFLRR\nBFBFFBBRLR\nFBBFFFFRRL\nFBFFFFFLLL\nFBFBBFBRLR\nBBFBBFBLRR\nBFBBBFFRLR\nFBFFBBBLRR\nFBFBFBBRRL\nBBFFBBFLRL\nBBFFFFBLRR\nFFBBFFBLLR\nBFBBFBBLRR\nBBFBFBBRLL\nBBFFFBFLLL\nFBBFBBBRRR\nBFBFBBFRLL\nFFBBFFBLRL\nFFFBBBFRRR\nBFBFFFBLRR\nBBFBFBBRRR\nBFBFFBBLLR\nBFFFBBBRLR\nFFBBBBBRLL\nFFFBBFBLLL\nFBFBBBBLRR\nFFBFFBBRLL\nBFBBBBFLLL\nBFFFBFFRLL\nBBFFFBFLRR\nBFBFFFFLRR\nBFBFBBBRLR\nBBFBBBFLRL\nFBBFFFFLLR\nFFFBBBBLLL\nBBBFFBFLLL\nFBFFBBBRLL\nFBFBFFFLLL\nFBBFFBFLLR\nBFBFBBFRRL\nBFFFFBBRLL\nFBFBFFBLLL\nBBFFFFFLLL\nFFBBBBFLLR\nFBFBBBFLLR\nBFBBFFBRRL\nFBBFFBBRLL\nBFBFFFFLLR\nBBFBFFFLRL\nBFFFBFBLRR\nFBBFBBFRRR\nFFBFBFFRRL\nBBFFFBBLLR\nBFBFBFFLRL\nBFBFFFBLRL\nFBFBBBFLLL\nFBBFFBBLLL\nBBBFFBFLLR\nBFFFBBFLRL\nBFFFBFFLLR\nBBBFFFFLRR\nBBFFBFFLLR\nBBFFFBBRRR\nBBBFFFBLLR\nBFBBBBFRLR\nFBBFBBBRLL\nBFBBFFBRLL\nFBFBFBFLRR\nBBFFFBFLRL\nFBFBFFBRLL\nFBBFBFBRLR\nFFBFBBFLRL\nBBFBBBFLRR\nBFFBFBBLRL\nBFFBBBBRLR\nBFFFFFBRRR\nFBBFFFBRRL\nBFBFFBFLLR\nFBBFBBFLRL\nFBBBBBBLRR\nBFBBBFBRRL\nBFFFBFBLLL\nFBFFFBBRRR\nFFBBFFBRLR\nBBFFFFFRRL\nFFBFBBBRRL\nFFBFBBFLRR\nBFFFBBBRRL\nFFBFBFBLRR\nBBFFBFBRLL\nBBFBBFBRRL\nBBFBBFFRLR\nFBBFBFFRLR\nBFBBFFBLLL\nBBFBFBFRLL\nFFBBBFFLLL\nFFBBBBBLRR\nFBBFBBFRRL\nBBFFBFBRLR\nBFFFBBFRRL\nBBFBBFFLLR\nFBFFBBFLRR\nBFBFBBBLLR\nFFFBBBBRLL\nBBFFFFFLRR\nBFBBFFBLRL\nBFBBFFFLLR\nFFFBFBFLLL\nFFBFFFFLLR\nFBFFFBFLLR\nBBBFFFFLLR\nBFFBFFFLLL\nFFFBBFBRRL\nFBBFFFFLLL\nFFFBBBFRLL\nBBFBBBBLRR\nFFFBBBFLRR\nFFBBFBFRRR\nBFBFBBBLRL\nBBFBBBFLLL\nFBBBFFBRLR\nBFFFBBBRRR\nFFBBBBFLRR\nFFBBFBBRRL\nFBBFFBFRLR\nBBFFBBFRRR\nBBFBBFBRLR\nBFFBBFBLRR\nFFBBBBBLRL\nBBFFBBBRRR\nBFFFBFBRRR\nBFFFFFFRRL\nBBFFBFBLRL\nFBFFFFBLRR\nFBFBBFFRRL\nBFBFFFBLLR\nFFFBFBBLRL\nBFFFFFFRLL\nBBFFFBBRRL\nFFBFBFBRRL\nFBBFBFFLLL\nFBFFBFBLRR\nBFFFFBBRLR\nFFBFFFBLRR\nBFBFFFBRRL\nFBBFFBFRLL\nFBFBBFBRRR\nFBBBFBFLLR\nFBBFFFBLLR\nBFFFFBFLLR\nFBBBBBBRLL\nBBBFFFFRLL\nBFFFBBBLRL\nFFFBFBFLLR\nFBFBBBBLLR\nFBFFBFFRRR\nBFFFBBBLLL\nBFBBFFBRRR\nFBBBBFFRRR\nBFBFBBFLRR\nBFFBFFBLRL\nBBFBFFFRLL\nFFFBBFBRLL\nFBBFFFFRLR\nFFBBFBBRLR\nBBFFFBBLLL\nBBFFFBBRLL\nFBBFFFFRRR\nBFBFBFBLRR\nFFBFFFFRRR\nFBFBFBFLRL\nFFBFBBFLLL\nFFBFBBBRLR\nBFBFFFBRLL\nFFBFFBBLRL\nBFBBBBBRLL\nBBFBFFBLRR\nFBFFFFBRLR\nFFBBBFBRRR\nBFBFBBBRRR\nFBBBBBFRRR\nFBBFBBBLRR\nBBFBBBBRRL\nBFFBBBFRLL\nBBFBFBFLLR\nFFBBFFBRRR\nBFFFBBBLLR\nBFFFBBBLRR\nFFFBFBFRRR\nBFBFBFBRRL\nFFBBBFBRRL\nFFFBBBBRRR\nFBFFBFFRRL\nBFFBFFFRRL\nFFFBBBFLRL\nFBBBBFFLRL\nFFBFFBBRLR\nFBBFBBBLRL\nFFBFFFFLRR\nFBFFBFBRLR\nFBBFBBBRRL\nFFBBBFBRLL\nBFFFFFBLRL\nFFFBBFFRLR\nBFBFFFBRRR\nFFBBFFFLRL\nFBBBBFBRLR\nFFBBBBFRLL\nFFBFFBBLLR\nFBFFFFBLLL\nFBFBBBBLLL\nBFFFBFBRRL\nFBBBBBFLLL\nFFBBFFFRLL\nFBBBFFFLLR\nBFFBBBBLLR\nBFBFBFFRLR\nBFBFFBBLLL\nFBFBBFFLRR\nFFBBFFFRRL\nFBFBBFFRLL\nBFFFFBFLLL\nFBBBFBBLLL\nFBFBFFFRLR\nBFFBBBBLRL\nFFBFFFFRLL\nBFBBFBBLLR\nFFBBFBBLRL\nFBFBBFBLRR\nFBBBBBBRRL\nFFBFBBFRRR\nFBFFBBFRLL\nFBBFFFBRLL\nBFFFBFBRLR\nBFFBFFBLRR\nBBBFFFBRLL\nBFBFFBBLRR\nBFBBBFBRLL\nBBFBFBFRLR\nFFFBFBBRRL\nBFFFFBBLLR\nFBFFBBBRLR\nBFBFFBFRLL\nFBFBFFBRRL\nBFFFFFFLLL\nBFFFBBFLLR\nBFFFBFBRLL\nBFBBBBBLRL\nBFFFFBFRLR\nBBFBFBFLRL\nFBBBBBFRLL\nBBFFBFFLRR\nFBFBFFBRLR\nFFBBBFBLRR\nFBBFFFBLRR\nBFBBBFBLRL\nBFFFBFBLLR\nBBFFBBFRLR\nBFBBFFFLRR\nBFFBFBBRLR\nFFBBFFFLLL\nFBBBFBFLLL\nBFBBBBFLRL\nFFBBBBBRRR\nFBBFFFBLLL\nBFBBFBBLLL\nFBBBBFBRLL\nFBBFBFFLRL\nBFFBBFBLLL\nFBBBFBBRRR\nBFFBFBFRLL\nBBFFBBBLRL\nBFBFBFBLRL\nFBBBFFFLLL\nBFFFBFFRRL\nFFBFFBFLLR\nBFFBFBBLRR\nBFFFFFBRLL\nBFBFBBBLRR\nFFFBBBBLRL\nBFBBBBBRRR\nBFFBFBFRLR\nBFFBBFFLLL\nBBFBBFFRRL\nFBBBFFFLRL\nFBFFBFFRLL\nFBFFFBFLRR\nFBBBFBBLLR\nBBFFFFBLLL\nBFFFBBFRLR\nBBFBFBBLRR\nFBBFBBBRLR\nFBFFFBBRRL\nFBBBFFBLLR\nFFBBBBFLLL\nBFFBFFBLLL\nFFBFBFBLLR\nBBFFBBBLLL\nBBFFFFFRLL\nBBFFFBBLRR\nFFFBBBFRRL\nBFFBFBBRRR\nBFFBBFFRLL\nFFFBBBFLLL\nFBFFFFFRRR\nFBBFBBFLRR\nFFBBFBFRLL\nFFFBFBFRLL\nFBBBFBBRLL\nBBFFBFFLRL\nFFFBBBBLLR\nBFFBFBBRLL\nBFBFFBFRLR\nBFFBFBBLLR\nBFFFBBFLLL\nBFFFFBFLRL\nFBFBBBBRRR\nFFBBBBFLRL\nBBFFFFBRLL\nFFBBBFFRRR\nFBFBBFBLLR\nFBBBFBBLRR\nBBBFFFFLLL\nBBFBBFBLLR\nBFBBFFBRLR\nBFBBBBFRRL\nFBBFFBBLRL\nBFFBFBFRRR\nBFBFBBFLRL\nFBFBBFFRLR\nFBBFBBFRLL\nFFBBFBFLRR\nBFBBFBFRRL\nBFBBBFFLRR\nBFBBFBBRRR\nFFBBBBBRLR\nBFBBFBFRLR\nFFBFFBFRRR\nBFFFFBBLRL\nBFFBBFBLLR\nBFFBBBFLRR\nFFBFFFBRLL\nBBBFFFBLLL\nFBBFBBFLLL\nBBFFFBFRRL\nFBBBFFFLRR\nFBBFBFBRRR\nFBBBFFFRRL\nBFFBBBFLLL\nBFBBFBBLRL\nFFBBFBBLLL\nBFBBBBFLLR\nFBFFFFBRRR\nFBBFFFFLRR\nFFFBFBBLLR\nBFBBFFFLRL\nFFBFFBBLRR\nFFBFBFBRLL\nFFBFFFBLRL\nFFFBBFFRRR\nFBBFBFFLRR\nFBFFBFBRRL\nBBFFBBFLLR\nFFBFFFBRRL\nBBFFBFFRRR\nFFBBBFBLRL\nFBBFFBFLRL\nFBFBBBFRLL\nBFFFFBBLLL\nBFFBBBBRRR\nFFBFBFBRRR\nFFBFBBBLLL\nBBFFBFFLLL\nBFFBFBBRRL\nFFBBFBFLRL\nFFBBFFFRLR\nBFBFBFFLLR\nBFBFBBFRLR\nFFFBFBBLRR\nBFFBFFBRRR\nBFFBFFFLRR\nFFBFFFBRRR\nFBBBFFBLLL\nFBFFBFBLLR\nBBFBFFBLLL\nFFBFBBFRLL\nBBFFFFBRRL\nFBFBFBBLLR\nFBFBFBBLLL\nFBBFBFFRRR\nFBFBBFBLLL\nBBFFBBFLRR\nBBFBFFBLRL\nFBFBFBBLRL\nBFFFFFBLLL\nBFFBBBFLLR\nBFBBBBBLRR\nFBFBBFBRLL\nFBFFFFBLLR\nBBFFBBBLRR\nFBFFFFFRRL\nFBFBFBFRLR\nBFFFBBFRLL\nBFFBFFBLLR\nBFBFFFFRRL\nFFBFFBFRRL\nFBBFBFFRLL\nFFBBBFBRLR\nBFBBBFFLRL\nFBBBBFBRRL\nFFFBFBFRRL\nBBFBBBFRLR\nBFFBFBFLRL\nBFFBBFBLRL\nFBFBFBFRRR\nFBBFFBBRRL\nFBFFBFFLRL\nBFBFFFFRRR\nFFBBFBFLLL\nFFFBBFBRLR\nBBFFBBBLLR\nBBFBFBFLRR\nBFFFFFBLLR\nBBFBFBBRLR\nFBFBFFFLRR\nBFBFFBFLLL\nBBFBBFFLLL\nFBBBFBBRRL\nFBFBFBBRLR\nFFBBBFFLLR\nBFFFFFBLRR\nBBFBFFFLRR\nFFBFBBBRLL\nBBFBFBFLLL\nBBFBBFFRRR\nBBFBBFFLRR\nFFBFBBBRRR\nFBFBFBFRRL\nBFFFFFFLRR\nBFBFBBFRRR\nFFFBBFFLLL\nFBFBBFFLRL\nFBFFBBBLLR\nBFFBBBBLLL\nFFBFFBFLLL\nFBFBFFBRRR\nBFBBBFFRRR\nBBBFFFFRRR\nBFBFBFBLLL\nFFBFBBBLRR\nBBFFBBBRLR\nFFBBFFBLRR\nBFBFBBBRRL\nFFBBFFFLRR\nFFFBBBBRRL\nBFBBFBFLLL\nFBBBBFBLRR\nBBFBFFFRRL\nFFBBFBFLLR\nBFFFFBBRRR\nBBFFBBFLLL\nFBFFBFBLLL\nBFBBFFFLLL\nFFBFFFBLLR\nFBFFFBBLLR\nBFBBBFFRRL\nFBFBBBFRLR\nFFBFFBFLRR\nBBFFFFFLLR\nFBBFBFFLLR\nBBFFBFBRRL\nBFBFBFFLRR\nBBFBFFFLLL\nBBFFFBBRLR\nBFBFFBBRLL\nBFBFBFBRLR\nBBFBBBBRLL\nBFBBFBBRLL\nFFBFBBBLRL\nBFBFBBBRLL\nFBBFBFBLRL\nFBFFFBBLRR\nBBFFBBBRRL\nBFBFFBFRRR\nBBBFFFBLRR\nFFBBBFFRRL\nFBBFFBFRRL\nBFFFBFFRLR\nFBFFBFFRLR\nFFFBFBBLLL\nFFBFBFFRRR\nBBFFBFFRRL\nFFFBFBFLRL\nBFFBBFFRRR\nFFBBBFFLRL\nFBFBFFBLLR\nFBFFBBFRRL\nBFFBBFFRLR\nBFFBFFBRLR\nBFFBFFFLRL\nFBFFFFFLRR\nFFFBBBBLRR\nBFBBFFBLLR\nBFBBFBBRLR\nBFFFFBFRLL\nBBFFFBFRLR\nFBFBFFFRRR\nFFFBBFFLRR\nFBBBBFBLLR\nFBBBBBFRLR\nFFBFBFBLLL\nFBFBBFFLLL\nBBFBBBBRLR\nBBFFBBFRRL\nBBFBBBFRLL\nBFBBFBFLRL\nBFBBBFFRLL\nFBFBFBBRRR\nFBBBBBBLLL\nBFBFFBBRRR\nFBBFFBBRRR\nBFFFFFBRRL\nFFBBFFFRRR\nFFBFFBBLLL\nBBBFFBFLRR\nBBFBBBBRRR\nFBFBFFFRLL\nFBBBFBFRRR\nFBBBBFFRRL\nBFFFFFFLRL\nFBBBBBFLRR\nBFFBBBFLRL\nBFBBFFFRLR\nFFBFFFFRLR\nFFBBBFFRLR\nBFBBFBBRRL\nFFBFBFFLLR\nBBBFFFFRLR\nBBFFFFFRLR\nFBBFFBBLLR\nBFBFFBFRRL\nBFFFBFFLRR\nFFBFBFBRLR\nBFFFBFFRRR\nBFFBBBBRRL\nFFBBBBBLLL\nBFFBBBFRLR\nFBFFFBFRLR\nFFBFBFFRLR\nBFBBBFBLLL\nFBFBBFBRRL\nBBFBFBBLRL\nBFBBFBFRLL\nBFBBBFFLLL\nFBBFBBBLLR\nFBFFFFBRRL\nFBBBBBBRRR\nFBFBBBBLRL\nFFFBFBBRRR\nFFBFBFFLRL\nFBFFBBFLLR\nFFBBFBBLRR\nBBFBFBBLLR\nFFFBFBFLRR\nBBBFFFBRRR\nFFBFFBBRRR\nFFBFFBBRRL\nFBBFFFFLRL\nFBFBBFFRRR\nBFBBFFFRLL\nFFFBBBFLLR\nFBBBBFBLLL\nBBFBBBBLRL\nBBFBFFBRRR\nBFFBBBBLRR\nFBBBBFBRRR\nBFBFBFFRRR\nBFFBBFBRLL\nFFBBBFBLLL\nBFBFFBFLRL\nBFFFBBFLRR\nFBBBBFBLRL\nFBBFBFFRRL\nFFFBBFFRLL\nFBFFFBBLRL\nFBBFFFBRLR\nFBBFBFBRRL\nFFBFFFFRRL\nFBFBBFFLLR\nFBFFBBFLLL\nFBBFBFBLLR\nBFFBBBFRRL\nFFBBFBBLLR\nBFBBFBFRRR\nBFFFFFFRLR\nFBBBFFFRLL\nFFBFFBFLRL\nFFBFFFFLRL\nBBBFFFBRLR\nBFFBFFBRLL\nBBBFFBFLRL\nFBBBFFBRRL\nBFBFBFBRRR\nFFFBBBFRLR\nBBFFBFBLLR\nBFBBBBFRLL\nBBFBFFBLLR\nFFBBFBBRRR\nFBBBFBBLRL\nBFBBBBFRRR\nBFBFBFBRLL\nBFBBFFFRRL\nFFBFBFFRLL\nFBBFBBFRLR\nBFFBFFFRLL\nBFBBBFBLRR\nBBFFFFFRRR\nFBFBBBBRLR\nFFBBFBFRLR\nFFBFFFFLLL\nFBBFFBFRRR\nFFBFFBFRLL\nFBBFFBBLRR\nFBBBFBFRLR\nBFBBBBFLRR\nFFBFBBBLLR\nBFFFBBFRRR\nFBBBFFBRLL\nFBFBBBFLRR\nBBFFBFFRLL\nFBFFFFBRLL\nFBFFBFBLRL\n"

func readPuzzleInput(puzzleInput string) []string {

	cleanedPuzzleInput := strings.ReplaceAll(puzzleInput, "\n", " ")
	boardingPasses := strings.Fields(cleanedPuzzleInput)
	return boardingPasses
}

func findSeat(input string) {
	minR := 0
	maxR := 127
	seatMin := 0
	seatMax := 7
	for i := 0; i < len(input); i++ {

		minR, maxR, seatMin, seatMax = processSeatData(input, i, minR, maxR, seatMin, seatMax)
		println(fmt.Sprintf("ranges from %v to %v, with position on column from %v to %v", minR, maxR, seatMax, seatMin))

	}
	seatID := maxR*8 + seatMax
	println(fmt.Sprintf("Seat ID should be: %v", seatID))
	allSeatIDs = append(allSeatIDs, seatID)

}

func processSeatData(input string, position, minRange, maxRange, seatMin, seatMax int) (int, int, int, int) {
	tempRange := maxRange - minRange
	tempSeatRange := seatMax - seatMin
	if string([]rune(input)[position]) == "F" {
		maxRange -= (tempRange / 2) + 1
	}
	if string([]rune(input)[position]) == "B" {
		minRange += tempRange/2 + 1
	}
	if string([]rune(input)[position]) == "R" {
		seatMin += tempSeatRange/2 + 1
	}
	if string([]rune(input)[position]) == "L" {
		seatMax -= tempSeatRange/2 + 1
	}

	return minRange, maxRange, seatMin, seatMax
}

func main() {

	b := &boardingPasses{passes: readPuzzleInput(puzzleInput)}
	for _, j := range b.passes {
		findSeat(j)
	}
	sort.Ints(allSeatIDs)

	for i, j := range allSeatIDs {

		if allSeatIDs[i+1] != j+1 {
			println(j+1)
		}

	}
}
